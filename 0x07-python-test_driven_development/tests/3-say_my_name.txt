====================
| TEST SAY MY NAME |
====================

this test was made to check if the program print
my name

Names:
======

``3-say_my_name`` print my name

::
	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("Edgar", "Gonzalo")
	My name is Edgar Gonzalo

	>>> say_my_name("Michael", "Mayer")
	My name is Michael Mayer

	>>> say_my_name("Abelardo")
	My name is Abelardo 

Errors:
=======

Raise errors when are necesary.

::
	>>> say_my_name("Edgar", 1)
	Traceback (most recent call last):
	TypeError: last_name must be a string

	>>> say_my_name(4.3, "Gonzalo")
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name(False, 1)
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name(True, 1)
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name(["Edgar"], 1)
	Traceback (most recent call last):
	TypeError: first_name must be a string


	>>> say_my_name((3, 4), 1)
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name("Edgar", True)
	Traceback (most recent call last):
	TypeError: last_name must be a string

	>>> say_my_name("Edgar", False)
	Traceback (most recent call last):
	TypeError: last_name must be a string

	>>> say_my_name("Edgar", ["hola"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

	>>> say_my_name("Vince", "")
	My name is Vince 

	>>> say_my_name("", "")
	My name is  

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'
